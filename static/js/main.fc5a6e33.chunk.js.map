{"version":3,"sources":["constants/appConstants.js","actions/loading.js","reducers/index.js","actions/setPokemonsList.js","actions/setPokemonDetails.js","components/shared/Pagination.jsx","components/Pokemon/Pokemon.jsx","components/shared/AppDropdown.jsx","components/Pokemon/FilterBar.jsx","actions/filterPokemons.js","actions/sortPokemons.js","assets/loadImg.gif","components/shared/AppPaging.jsx","components/Pokemon/PokemonsList.jsx","actions/handleRetrievePokemonDetails.js","components/Pokemon/PokemonsDetails.jsx","actions/handleRetreivePokemonData.js","components/App.js","index.js"],"names":["POKEMON_LIST","POKEMON_DETAILS","POKEMONS_SORT","POKEMONS_FILTER","NAME_ASC_ORDER","NAME_DSC_ORDER","WEIGHT_ASC_ORDER","WEIGHT_DSC_ORDER","HEIGHT_ASC_ORDER","HEIGHT_DSC_ORDER","NONE","PAGE_OPTIONS","value","text","SORT_TYPES","UNKNOWN","CHANGE_LOAD","changeLoading","isLoading","type","combineReducers","pokemons","state","viewList","pokemonList","action","data","pokemonDetails","details","loading","usePagination","itemsPerPage","useState","currentPage","setCurrentPage","maxPage","Math","ceil","length","next","min","prev","max","jump","page","pageNumber","currentData","begin","end","slice","withRouter","pokemon","id","name","sprites","height","weight","abilitiesList","abilities","map","ability","className","to","charAt","toUpperCase","src","front_default","alt","AppDropdown","label","options","onSelection","onChange","index","mapDispatchToProps","filterPokemons","dispatch","getState","inputValue","toLowerCase","filteredData","filter","includes","sortPokemons","sortedData","sort","a","b","localeCompare","connect","event","target","placeholder","AppPaging","count","handleChange","handleChangeRowsPerPage","size","variant","shape","e","setPage","React","rowsPerPage","setRowsPerPage","p","parseInt","Fragment","loadImg","handleRetrievePokemonDetails","number","fetch","then","response","json","initialData","speciesData","types","texts","flavor_text_entries","item","language","flavor_text","txtSize","singleTxt","floor","random","habitatName","habitat","growthRate","growth_rate","color","captureRate","capture_rate","namePkm","baseExperience","base_experience","image","catch","error","useParams","useEffect","handleRetrievePokemonData","promisesArray","results","url","Promise","all","mapDispatchAsProps","basename","process","exact","path","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc5a6e33.chunk.js","sourcesContent":["export const POKEMON_LIST = 'POKEMON_LIST';\r\nexport const POKEMON_DETAILS = 'POKEMON_DETAILS';\r\nexport const POKEMONS_SORT = 'POKEMONS_SORT';\r\nexport const POKEMONS_FILTER = 'POKEMONS_FILTER';\r\nexport const SET_POKEMONS_FILTER = 'SET_POKEMONS_FILTER';\r\nexport const NAME_ASC_ORDER = 'NAME_ASC_ORDER';\r\nexport const NAME_DSC_ORDER = 'NAME_DSC_ORDER';\r\nexport const WEIGHT_ASC_ORDER = 'WEIGHT_ASC_ORDER';\r\nexport const WEIGHT_DSC_ORDER = 'WEIGHT_DSC_ORDER';\r\nexport const HEIGHT_ASC_ORDER = 'HEIGHT_ASC_ORDER';\r\nexport const HEIGHT_DSC_ORDER = 'HEIGHT_DSC_ORDER';\r\nexport const NONE = 'NONE';\r\n\r\nexport const PAGE_OPTIONS = [\r\n    { value: 10, text: '10' },\r\n    { value: 20, text: '20' },\r\n    { value: 50, text: '50' },\r\n];\r\n\r\nexport const SORT_TYPES = [\r\n    { value: NONE, text: 'Please Select' },\r\n    { value: NAME_ASC_ORDER, text: 'Name ASC' },\r\n    { value: NAME_DSC_ORDER, text: 'Name DSC' },\r\n    { value: HEIGHT_ASC_ORDER, text: 'Height ASC' },\r\n    { value: HEIGHT_DSC_ORDER, text: 'Height DSC' },\r\n    { value: WEIGHT_ASC_ORDER, text: 'Width ASC' },\r\n    { value: WEIGHT_DSC_ORDER, text: 'Width DSC' },\r\n];\r\n\r\nexport const API_URL = 'https://pokeapi.co/api/v2/pokemon?limit=500';\r\nexport const POKEMON_URL = 'https://pokeapi.co/api/v2/pokemon/';\r\nexport const POKEMON_SPECIES_URL = 'https://pokeapi.co/api/v2/pokemon-species/';\r\nexport const UNKNOWN = 'unknown';","const CHANGE_LOAD = 'CHANGE_LOAD';\r\n\r\nexport const changeLoading = isLoading => ({\r\n    type: CHANGE_LOAD,\r\n    isLoading,\r\n});\r\n\r\nexport const loadingReducer = (state = true, action = { type: 'NULL_ACTION'}) => {\r\n    switch (action.type){\r\n        case CHANGE_LOAD:\r\n            return action.isLoading;\r\n        default:\r\n            return state;               \r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport { setPokemonsList as pokemons } from '../actions/setPokemonsList';\r\nimport { setPokemonsDetails as pokemonDetails } from '../actions/setPokemonDetails';\r\nimport { loadingReducer as loading } from '../actions/loading';\r\n\r\nexport default combineReducers({\r\n    pokemons,\r\n    pokemonDetails,\r\n    loading,\r\n})","import { POKEMON_LIST, POKEMONS_SORT, POKEMONS_FILTER } from '../constants/appConstants';\r\n\r\nexport const setPokemonsList = (state = {\r\n    viewList: [],\r\n    pokemonList: [],\r\n}, action = { type: 'NULL_ACTION'}) => {\r\n    switch (action.type){\r\n        case POKEMON_LIST:\r\n            return {...state, ...action.data};\r\n        case POKEMONS_SORT:\r\n            return {...state, viewList: [...action.viewList]};\r\n        case POKEMONS_FILTER:\r\n            return {...state, viewList: [...action.viewList]};\r\n        default:\r\n            return state;               \r\n    }\r\n};","import { POKEMON_DETAILS } from '../constants/appConstants';\r\n\r\nexport const setPokemonsDetails = (state = {}, action = { type: 'NULL_ACTION'}) => {\r\n    switch (action.type){\r\n        case POKEMON_DETAILS:\r\n            return action.details;\r\n        default:\r\n            return state;               \r\n    }\r\n};","import { useState } from \"react\";\r\n\r\nconst usePagination = (data, itemsPerPage) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const maxPage = Math.ceil(data.length / itemsPerPage);\r\n\r\n  const currentData = () => {\r\n    const begin = (currentPage - 1) * itemsPerPage;\r\n    const end = begin + itemsPerPage;\r\n    return data.slice(begin, end);\r\n  }\r\n\r\n  const next = () => {\r\n    setCurrentPage(currentPage => Math.min(currentPage + 1, maxPage));\r\n  }\r\n\r\n  const prev = () => {\r\n    setCurrentPage(currentPage => Math.max(currentPage - 1, 1));\r\n  }\r\n\r\n  const jump = page => {\r\n    const pageNumber = Math.max(1, page);\r\n    setCurrentPage(currentPage => Math.min(pageNumber, maxPage));\r\n  }\r\n\r\n  return { next, prev, jump, currentData, currentPage, maxPage };\r\n}\r\n\r\nexport default usePagination;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter, Link } from 'react-router-dom';\r\n\r\nconst Pokemon = ({ pokemon }) => {\r\n  const {\r\n    id, name, sprites, height, weight, abilities\r\n  } = pokemon;\r\n  const abilitiesList = abilities.map(ability => ability.ability.name);\r\n  return (\r\n    <div>\r\n      <Link className=\"pokemon-card\" to={`/pokemon/${id}`} id=\"link-detail\">\r\n        <div className=\"d-flex-around title-card\">\r\n          <span>\r\n            #\r\n            {id}\r\n          </span>\r\n          <span data-testid=\"pokemon-name\">\r\n            {name && name.charAt(0).toUpperCase() + name.slice(1)}\r\n          </span>\r\n        </div>\r\n        <img className=\"card-image\" src={sprites.front_default} alt={name} />\r\n        <span className=\"type-title\">Height - {height}</span>\r\n        <span className=\"type-title\">Weight - {weight}</span>\r\n        <div className=\"type-container\">\r\n          <span className=\"type-title\">Abilities</span>\r\n          <ul className=\"type-list\">\r\n            {\r\n              abilitiesList && abilitiesList.map(ability => (<li key={ability}>{ability}</li>))\r\n            }\r\n          </ul>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nPokemon.propTypes = {\r\n  pokemon: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    sprites: PropTypes.shape({}).isRequired,\r\n    types: PropTypes.arrayOf.isRequired,\r\n    height: PropTypes.number.isRequired,\r\n    weight: PropTypes.number.isRequired,\r\n    abilities: PropTypes.arrayOf(PropTypes.shape({})),\r\n  }).isRequired,\r\n};\r\n\r\nexport default withRouter(Pokemon);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AppDropdown = ({\r\n    label,\r\n    options,\r\n    onSelection,\r\n}) => {\r\n    return (\r\n        <div className=\"input-group input-group-sm mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\" id=\"inputGroup-sizing-sm\">\r\n                    {label}\r\n                </span>\r\n            </div>\r\n            <select\r\n                id=\"form-select\"\r\n                className=\"form-select\"\r\n                aria-label=\"Default select example\"\r\n                onChange={onSelection}\r\n                data-testid='connectedDropdown'\r\n            >\r\n                {\r\n                    options.map(({ value, text }, index) => (\r\n                        <option key={index} value={value}>{text}</option>\r\n                    ))\r\n                }\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nAppDropdown.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    onSelection: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AppDropdown;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport filterPokemons from '../../actions/filterPokemons';\r\nimport sortPokemons from '../../actions/sortPokemons';\r\nimport AppDropdown from '../shared/AppDropdown';\r\nimport { SORT_TYPES } from '../../constants/appConstants';\r\n\r\nconst FilterBar = ({\r\n  filterPokemons,\r\n  sortPokemons,\r\n}) => {\r\n  const inputOnchage = (event) => {\r\n    filterPokemons(event.target.value);\r\n  }\r\n\r\n  const onSortChange = (event) => {\r\n    sortPokemons(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"center-child col-md-4\">\r\n        <AppDropdown\r\n          label=\"Sort By\"\r\n          options={SORT_TYPES}\r\n          onSelection={onSortChange}\r\n        />\r\n     </div>\r\n\r\n      <div className=\"center-child col-md-4\">\r\n        <div className=\"input-group input-group-sm mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\" id=\"inputGroup-sizing-sm\">\r\n                    Search By\r\n                </span>\r\n            </div>\r\n            <input\r\n              id=\"name-input\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              aria-label=\"Small\"\r\n              aria-describedby=\"inputGroup-sizing-sm\"\r\n              onChange={inputOnchage}\r\n              placeholder=\"Name or Abilities\" \r\n            />\r\n        </div>\r\n      </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nFilterBar.propTypes = {\r\n  filterPokemons: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  filterPokemons,\r\n  sortPokemons,\r\n};\r\n\r\nexport { FilterBar as TestableFilterBar };\r\n\r\nexport default connect(null, mapDispatchToProps)(FilterBar);","import { POKEMONS_FILTER } from '../constants/appConstants';\r\n\r\nconst filterPokemons = value => (dispatch, getState) => {\r\n    const { pokemonList } = getState().pokemons;\r\n    const inputValue = value.toLowerCase();\r\n    const filteredData = pokemonList.filter(pokemons => pokemons.name === inputValue || pokemons.abilities.includes(inputValue));\r\n    if(filteredData.length > 0) {\r\n        dispatch({\r\n            type: POKEMONS_FILTER,\r\n            viewList: filteredData,\r\n        })\r\n    } else {\r\n        dispatch({\r\n            type: POKEMONS_FILTER,\r\n            viewList: pokemonList,\r\n        })\r\n    }    \r\n}\r\n\r\nexport default filterPokemons;","import { \r\n    POKEMONS_SORT, NAME_ASC_ORDER, NAME_DSC_ORDER, HEIGHT_ASC_ORDER, HEIGHT_DSC_ORDER, WEIGHT_ASC_ORDER,\r\n    WEIGHT_DSC_ORDER, NONE, \r\n} from '../constants/appConstants';\r\n\r\nconst sortPokemons = value => (dispatch, getState) => {\r\n    const { pokemonList, viewList } = getState().pokemons;\r\n    if(value === NONE) {\r\n        dispatch({\r\n            type: POKEMONS_SORT,\r\n            viewList: pokemonList,\r\n        });\r\n        return;\r\n    }\r\n\r\n    const sortedData = [...viewList].sort((a, b) => {\r\n        switch(value) {\r\n            case NAME_ASC_ORDER: \r\n                return a.name.localeCompare(b.name);\r\n            case NAME_DSC_ORDER: \r\n                return b.name.localeCompare(a.name);\r\n            case HEIGHT_ASC_ORDER: \r\n                return a.height - b.height;\r\n            case HEIGHT_DSC_ORDER: \r\n                return b.height - a.height;\r\n            case WEIGHT_ASC_ORDER: \r\n                return a.weight - b.weight;\r\n            case WEIGHT_DSC_ORDER: \r\n                return b.weight - a.weight;          \r\n            default:\r\n                return [];\r\n        }\r\n    });\r\n\r\n    dispatch({\r\n        type: POKEMONS_SORT,\r\n        viewList: sortedData,\r\n    });  \r\n}\r\n\r\nexport default sortPokemons;","export default __webpack_public_path__ + \"static/media/loadImg.0202e921.gif\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport AppDropdown from './AppDropdown';\r\nimport { PAGE_OPTIONS } from '../../constants/appConstants';\r\n\r\nconst AppPaging = ({\r\n    count, page, handleChange, handleChangeRowsPerPage,\r\n}) => (\r\n    <div className=\"pagination-section\">\r\n        <Pagination\r\n            count={count}\r\n            size=\"large\"\r\n            page={page}\r\n            variant=\"outlined\"\r\n            shape=\"rounded\"\r\n            onChange={handleChange}\r\n        />\r\n        <div className=\"col-md-3\">\r\n            <AppDropdown\r\n                label=\"Rows per page\"\r\n                options={PAGE_OPTIONS}\r\n                onSelection={e => handleChangeRowsPerPage(e.target.value)}\r\n            />\r\n        </div>\r\n    </div>  \r\n)\r\n\r\nAppPaging.propTypes = {\r\n    handleChange: PropTypes.func,\r\n    handleChangeRowsPerPage: PropTypes.func,\r\n    page: PropTypes.number,\r\n    count: PropTypes.number,\r\n};\r\n\r\nexport default AppPaging;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport usePagination from \"../shared/Pagination\";\r\nimport Pokemon from './Pokemon';\r\nimport FilterBar from './FilterBar';\r\nimport loadImg from '../../assets/loadImg.gif';\r\nimport AppPaging from '../shared/AppPaging';\r\n\r\nconst PokemonsList = ({\r\n    pokemons: { viewList }, loading,\r\n}) => {\r\n    let [page, setPage] = useState(1);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const count = Math.ceil(viewList.length / rowsPerPage);\r\n    const filteredData = usePagination(viewList, rowsPerPage);\r\n    \r\n    const handleChange = (e, p) => {\r\n        setPage(p);\r\n        filteredData.jump(p);\r\n    };\r\n  \r\n    const handleChangeRowsPerPage = (value) => {\r\n        setRowsPerPage(parseInt(value, 10));\r\n        setPage(0);\r\n    };\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"filter-container\">\r\n                <FilterBar />\r\n                <AppPaging \r\n                    page={page} \r\n                    count={count} \r\n                    handleChange={handleChange}\r\n                    handleChangeRowsPerPage={handleChangeRowsPerPage} \r\n                />\r\n            </div>\r\n\r\n            { loading && (\r\n                <div data-testid=\"loading\" className=\"bg-load\">\r\n                    <img className=\"image-load\" src={loadImg} alt=\"loadingImage\" />\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"cards-container\">\r\n                {\r\n                    !loading && filteredData.currentData().map((pokemon, index) => (\r\n                        <Pokemon key={index} pokemon={pokemon} />\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n            <AppPaging \r\n                page={page} \r\n                count={count} \r\n                handleChange={handleChange}\r\n                handleChangeRowsPerPage={handleChangeRowsPerPage} \r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nPokemonsList.propTypes = {\r\n    loading: PropTypes.bool.isRequired,\r\n    pokemons: PropTypes.shape({\r\n        viewList: PropTypes.arrayOf(PropTypes.shape({})),\r\n    }),\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemons: state.pokemons,\r\n    loading: state.loading,\r\n});\r\n\r\nexport { PokemonsList as TestablePokemonsList };\r\n\r\nexport default connect(mapStateToProps)(PokemonsList);","import { changeLoading } from './loading';\r\nimport { POKEMON_SPECIES_URL, POKEMON_URL, POKEMON_DETAILS, UNKNOWN } from '../constants/appConstants';\r\n\r\nconst handleRetrievePokemonDetails = number => async (dispatch) => {\r\n    dispatch(changeLoading(true));\r\n    await fetch(POKEMON_URL + number)\r\n        .then(response => response.json())\r\n        .then(initialData => {\r\n            dispatch({\r\n                type: POKEMON_DETAILS,\r\n                details: {},\r\n            });\r\n            \r\n            fetch(POKEMON_SPECIES_URL + number)\r\n                .then(response => response.json())\r\n                .then(speciesData => {\r\n                    const types = initialData.types.map(type => (type.type.name));\r\n                    const texts = speciesData.flavor_text_entries.filter(item => (item.language.name === 'en')).map(text => text.flavor_text);\r\n                    const txtSize = texts.length;\r\n                    const singleTxt = texts[Math.floor(Math.random() * txtSize)];\r\n\r\n                    let habitatName = UNKNOWN;\r\n                    if (speciesData.habitat) {\r\n                        habitatName = speciesData.habitat.name;\r\n                    }\r\n\r\n                    let growthRate = UNKNOWN;\r\n                    if (speciesData.growth_rate) {\r\n                        growthRate = speciesData.growth_rate.name;\r\n                    }\r\n\r\n                    let shape = UNKNOWN;\r\n                    if (speciesData.shape) {\r\n                        shape = speciesData.shape.name;\r\n                    }\r\n\r\n                    let color = UNKNOWN;\r\n                    if (speciesData.color) {\r\n                        color = speciesData.color.name;\r\n                    }\r\n\r\n                    let captureRate = UNKNOWN;\r\n                    if (speciesData.capture_rate) {\r\n                        captureRate = speciesData.capture_rate;\r\n                    }\r\n                    \r\n                    dispatch({\r\n                        type: POKEMON_DETAILS,\r\n                        details: {\r\n                            number: initialData.id,\r\n                            namePkm: initialData.name,\r\n                            baseExperience: initialData.base_experience,\r\n                            height: initialData.height,\r\n                            weight: initialData.weight,\r\n                            image: initialData.sprites.front_default,\r\n                            captureRate,\r\n                            types,\r\n                            text: singleTxt,\r\n                            habitat: habitatName,\r\n                            growthRate,\r\n                            shape,\r\n                            color\r\n                        }\r\n                    });\r\n                }).catch(error => {\r\n                    // Error handling here\r\n                })\r\n    }).catch(error => {\r\n        // Error handling here\r\n    })\r\n    dispatch(changeLoading(false));\r\n}\r\n\r\nexport default handleRetrievePokemonDetails;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport loadImg from '../../assets/loadImg.gif';\r\nimport handleRetrievePokemonDetails from '../../actions/handleRetrievePokemonDetails';\r\n\r\nconst PokemonsDetails = ({\r\n    handleRetrievePokemonDetails,\r\n    pokemonDetails,\r\n    loading,\r\n}) => {\r\n    const { number } = useParams();\r\n\r\n    React.useEffect(() => {\r\n        handleRetrievePokemonDetails(number)\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            { loading\r\n                && (\r\n                <div data-testid=\"loading-det\" className=\"bg-load\">\r\n                    <img className=\"margin-top-30 image-load\" src={loadImg} alt=\"loadingImage\" />\r\n                </div>\r\n            )}\r\n\r\n            { !loading && (\r\n                <div className=\"pok-details\" key={`#${pokemonDetails.number} ${pokemonDetails.namePkm}`}>\r\n                    <div className=\"main-info-container\">\r\n                        <span className=\"detail-name\">\r\n                        {`#${pokemonDetails.number} ${pokemonDetails.namePkm}`.toUpperCase()}\r\n                        </span>\r\n                        <div className=\"flex-details card-detail-container\">\r\n                        <div className=\"detail-col-1\">\r\n                            <img className=\"detail-img\" src={pokemonDetails.image} alt={pokemonDetails.namePkm} />\r\n                            <div className=\"detail-text\">\r\n                            {pokemonDetails.text}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex-details-2\">\r\n                            <div className=\"mr-2\">\r\n                                <h4>Details Pokemon</h4>\r\n                                <div data-testid=\"pokemon-height\" className=\"my-3\">\r\n                                    <span className=\"font-weight-bold\">Height: </span>\r\n                                    {pokemonDetails.height}\r\n                                </div>\r\n                                <div data-testid=\"pokemon-weight\" className=\"my-3\">\r\n                                    <span className=\"font-weight-bold\">Weight: </span>\r\n                                    {pokemonDetails.weight}\r\n                                </div>\r\n                                <div className=\"my-3\">\r\n                                    <span className=\"font-weight-bold\">Capture Rate: </span>\r\n                                    {pokemonDetails.captureRate}\r\n                                </div>\r\n                                <div className=\"my-3\">\r\n                                    <span className=\"font-weight-bold\">Growth Rate: </span>\r\n                                    {pokemonDetails.growthRate}\r\n                                </div>\r\n                                <div className=\"my-3\">\r\n                                    <span className=\"font-weight-bold\">Base Exp: </span>\r\n                                    {pokemonDetails.baseExperience}\r\n                                </div>\r\n                                <div className=\"type-container\">\r\n                                    { pokemonDetails.types && pokemonDetails.types.length === 1\r\n                                    && (\r\n                                    <span className=\"type-title\">Type</span>\r\n                                    )}\r\n                                    { pokemonDetails.types && pokemonDetails.types.length > 1\r\n                                    && (\r\n                                        <span className=\"type-title\">Types</span>\r\n                                    )}\r\n                                    <ul className=\"type-list-det\">\r\n                                    {\r\n                                        pokemonDetails.types\r\n                                        && pokemonDetails.types.map(type => (<li key={type}>{type}</li>))\r\n                                    }\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <h4>Details Species</h4>\r\n                                <div className=\"my-3\">\r\n                                    <span className=\"font-weight-bold\">Habitat: </span>\r\n                                    { pokemonDetails.habitat && pokemonDetails.habitat.charAt(0).toUpperCase() + pokemonDetails.habitat.slice(1) }\r\n                                </div>\r\n                                <div className=\"my-3\">\r\n                                    <span className=\"font-weight-bold\">Shape: </span>\r\n                                    { pokemonDetails.shape && pokemonDetails.shape.charAt(0).toUpperCase() + pokemonDetails.shape.slice(1) }\r\n                                </div>\r\n                                <div className=\"my-3\">\r\n                                    <span className=\"font-weight-bold\">Color: </span>\r\n                                    { pokemonDetails.color && pokemonDetails.color.charAt(0).toUpperCase() + pokemonDetails.color.slice(1) }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nPokemonsDetails.propTypes = {\r\n    pokemonDetails: PropTypes.shape({}),\r\n    loading: PropTypes.bool.isRequired,\r\n    handleRetrievePokemonDetails: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    handleRetrievePokemonDetails,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    pokemonDetails: state.pokemonDetails,\r\n    loading: state.loading,\r\n});\r\n\r\nexport { PokemonsDetails as TestablePokemonsDetails };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PokemonsDetails);","import { changeLoading } from './loading';\r\nimport { POKEMON_LIST, API_URL } from '../constants/appConstants';\r\n\r\nconst handleRetrievePokemonData = () => async (dispatch) => {\r\n    const pokemonList = await fetch(API_URL)\r\n    .then(response => response.json())\r\n    .then(({ results }) => {\r\n        let promisesArray = results.map(({ url }) => {\r\n            return fetch(url).then(response => response.json());\r\n        })\r\n        return Promise.all(promisesArray)\r\n    })\r\n    .then((data) => {\r\n        return data;\r\n    });\r\n\r\n    dispatch(changeLoading(false));\r\n    dispatch({\r\n        type: POKEMON_LIST,\r\n        data: {\r\n            viewList: pokemonList,\r\n            pokemonList,\r\n        }\r\n    });\r\n}\r\n\r\nexport default handleRetrievePokemonData;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from 'react-router-dom';\nimport PokemonsList from './Pokemon/PokemonsList';\nimport PokemonsDetails from './Pokemon/PokemonsDetails';\nimport handleRetrievePokemonData from '../actions/handleRetreivePokemonData';\n\nconst App = ({ handleRetrievePokemonData }) =>{\n  React.useEffect(() => {\n    handleRetrievePokemonData();\n  }, []);\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"header-Nav d-flex justify-content-between\">\n          <div className=\"d-flex justify-content-start\">\n            <Link className=\"clear-link\" to=\"/\">\n              <h1 className=\"self-center text-dark\">Pokemon Catalog</h1>\n            </Link>\n            <ul className=\"self-center list-links\">\n              <li>\n                <Link className=\"clear-link text-white\" to=\"/home\">Home</Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div>\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/home\" />\n            </Route>\n            <Route exact path=\"/pokemon/:number\">\n              <PokemonsDetails />\n            </Route>\n            <Route exact path=\"/home\">\n              <PokemonsList />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n  )\n};\n\nApp.propTypes = {\n  handleRetrievePokemonData: PropTypes.func.isRequired,\n}\n\nconst mapDispatchAsProps = {\n  handleRetrievePokemonData,\n}\n\nexport default connect(null, mapDispatchAsProps)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport rootReducer from './reducers/index';\nimport './index.css';\nimport thunk from 'redux-thunk';\nimport App from './components/App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}